技术点:
	01.使用crypto-js可以实现前端加密
	02.弹框使用的是vue-layer,然后使用install 方法注册成全局组件,可以全局调用
	03.复制粘贴使用的是clipboard.js  网址:http://www.clipboardjs.cn/
	04.上传图片时将图片转换为base64的方法使用的是
		web API 的FileReader, 对象允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容，
		使用 File 或 Blob 对象指定要读取的文件或数据。
		FileReader.readAsDataURL() 开始读取指定的Blob中的内容。一旦完成，result属性中将包含一个data: URL格式的Base64字符串以表示所读取文件的内容。
		FileReader.onload 处理load事件。该事件在读取操作完成时触发。
	
	05.URL.createObjectURL()的使用方法 看具体网址:https://www.cnblogs.com/PasserByOne/p/12034784.html
	06.blob 对象:
		一个 Blob对象表示一个不可变的, 原始数据的类似文件对象。Blob表示的数据不一定是一个JavaScript原生格式 blob对象本质上是js中的一个对象，里面可以储存大量的二进制编码格式的数据。
		网址:https://www.cnblogs.com/wangfajing/p/7202139.html
	
小程序中的坑
	01.textarea多行输入框,该组件是原生组件,该组件的placeholder 会发生穿透, 使用cover-view 可以覆盖在原生组件之上的文本视图
	cover-view 里面只支持 嵌套cover-view,cover-image,还可以使用button.
	02.使用catchtouchmove='ture' 可以阻止遮罩层下面的页面滚动
	
vue 相关
	01.Vue.observable 的使用可以实现一个简单一点的数据状态管理
	02.vue 中的依赖注入 所提供的的属性并不是响应式的
	03.vue 打包的时候多个css 文件会打包在一起,所以给不同的添加不同的前缀,然后通过后台的接口返回来实现
	
	
	
重要的css 
	01.box-orient 属性规定框的子元素应该被水平或垂直排列。
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 2; //显示两行文字
	02.文字内容超出 显示省略号
		overflow: hidden;
		text-overflow: ellipsis; // 当文本溢出时显示省略号
		white-space: nowrap; //强制一行显示 不换行
	03.letter-spacing 属性增加或减少字符间的空白（字符间距）。
		letter-spacing:2px
	04.white-space: nowrap 规定段落中的文本不进行换行：
		normal	默认。空白会被浏览器忽略。
		pre	空白会被浏览器保留。其行为方式类似 HTML 中的 <pre> 标签。
		nowrap	文本不会换行，文本会在在同一行上继续，直到遇到 <br> 标签为止。
		pre-wrap	保留空白符序列，但是正常地进行换行。
		pre-line	合并空白符序列，但是保留换行符。
		inherit	规定应该从父元素继承 white-space 属性的值。

js相关
	01.js最大的安全数值是 2的53次方即是 9007199254740992;这个值是16位; 不包括两端,所以准确的是说最大的值是 2的53次方 -1; 
		在axios 中使用 处理大数据即是数字超过了安全值得方法是使用 JSONbig.parse(json) 网址:https://blog.csdn.net/weixin_44867717/article/details/104326988
	02.js是一门单线程语言,js 是实现对dom 的操作如果是多线程对dom 操作就会产生冲突,所以只能是单线程 --个人理解
	03.js的浮点数加减乘除存在精度丢失的问题,是因为会十进制转换成二进制,在使用浮点数进行大小比较的时候不要直接比较,而是要使用parseFloat()转换一下,可能两者中会有字符串则会比较失误
		比如说这种比较 "99.00"> "   99.565" 返回的就是true ---- 解决方式 parseFloat("90.00")>parseFloat("  99.565") 返回的就是false
	04.js 中使用toFixed 方法即是Number.prototype.toFixed() 可以实现四舍五入保留两位小数 比如var numObj = 12345.6789;  numObj.toFixed(2)--得到的是"12345.68"; 而且得到的是一个字符串
	05.js 中使用 instanceof--运算符用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链;---- 可以判断数据类型;通过字面量创建的字符串是无法使用instanceof来判断某个变量是
		否是字符串,必须是通过 new 的方式才能判断; 但是对于复杂数据类型,对象和数组,不管哪种方式创建都可以使用 instanceof 来判断数据类型
	